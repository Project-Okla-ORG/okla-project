name: CI CD Pipeline for Patient Health System on Docker 

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: login to docker hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: List the folder structure
        run: ls -la

# Docker Imgae build and push for Backend
      - name: build docker image for backend
        run: docker build -t vinaybabuminnakanti/patient-health-backend:latest -f backend/Dockerfile ./backend

      - name: push docker image for backend
        run: docker push vinaybabuminnakanti/patient-health-backend:latest

# Docker Imgae build and push for Frontend
      - name: build docker image for frontend
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/patient-health-frontend:latest ./frontend --build-arg REACT_APP_API_URL=http://${{ secrets.EC2_HOST }}:5000/api

      - name: push docker image for frontend
        run: docker push ${{ secrets.DOCKER_USERNAME }}/patient-health-frontend:latest

# Docker Imgae build and push for Python Service
      - name: build docker image for python service
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/patient-health-python:latest -f python-service/Dockerfile ./python-service

      - name: push docker image for python service
        run: docker push ${{ secrets.DOCKER_USERNAME }}/patient-health-python:latest

      - name: Decode EC2 Login Key
        run: |
          echo ${{ secrets.EC2_SSH_KEY }} | base64 --decode > ec2_key.ec2_key.pem

      - name: SSH into EC2 Instance
        run: |
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          cd /root/okla-project
          git pull origin main
          docker-compose pull
          docker-compose up -d
          EOF

